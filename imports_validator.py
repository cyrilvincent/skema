import os
from typing import Set


class ImportsValidator:

    def __init__(self):
        self.nb_import = 0
        self.pythons: Set[str] = set()
        self.imports: Set[str] = set()
        self.imports.add("os")
        self.imports.add("sys")

    def parse(self, file: str):
        print(f"Parse {file}")
        with open(file) as f:
            for row in f:
                if row.startswith("import ") or row.startswith("from "):
                    name = row.split(" ")[1].strip()
                    if "." in name:
                        name = name.split(".")[0]
                    if name not in self.imports and name not in self.pythons:
                        print(f"Found import {name}")
                        self.imports.add(name)

    def scan_pythons(self):
        print("Parsing python files")
        l = os.listdir(".")
        for f in l:
            if f.endswith(".py"):
                self.pythons.add(f[:-3])
        print(f"Found {len(self.pythons)} python files")

    def scan(self):
        self.scan_pythons()
        l = os.listdir(".")
        l.sort()
        for f in l:
            if f.endswith(".py"):
                self.parse(f)
        print(f"Found {len(self.imports)} imports")

    def export(self):
        print("Generating test_imports.py")
        with open("test_imports.py", "w") as f:
            f.write("# Generated by imports_validator.py\n")
            f.write("import sys\n")
            f.write('print(f"Python {sys.version}", flush=True)\n')
            l = list(self.imports)
            l.sort()
            for i in l:
                if i != "sys":
                    f.write(f"import {i}\n")
                    f.write("try:\n")
                    f.write(f'\tprint(f"{i}==' + '{' + i + '.__version__}", flush=True)\n')
                    f.write("except AttributeError:\n")
                    f.write("\tpass\n")

    def run(self):
        print("\npython test_imports.py")
        import test_imports


if __name__ == '__main__':
    iv = ImportsValidator()
    iv.scan()
    iv.export()
    iv.run()
