https://api.distancematrix.ai/maps/api/distancematrix/json?origins=44.1129490309,7.19591357207&destinations=43.6032029947,7.07930999067&key=<EIz6Sq8F7U4Agwo2ePY6CYhv14eVn>
https://api.distancematrix.ai/maps/api/distancematrix/json?origins=51.4822656,-0.1933769&destinations=51.4994794,-0.1269979&key=<your_access_token>

import googlemaps
from datetime import datetime

gmaps = googlemaps.Client(key='AIzaSyDy_j_im-CrhAwloz2Kv3pEUqjE6-3I4NQ')


now = datetime.now()
directions_result = gmaps.directions("44.1129490309, 7.19591357207",
                                     "43.6032029947,7.07930999067",
                                     mode="driving",
                                     avoid="ferries",
                                     departure_time=now
                                    )

print(directions_result[0]['legs'][0]['distance']['text'])
print(directions_result[0]['legs'][0]['duration']['text'])


def call_matrix_api(origins, destinations):
    url = 'https://maps.googleapis.com/maps/api/distancematrix/json'
    key = ''  # INSERT API KEY !!!
    params = {'key': key, 'origins': origins, 'destinations': destinations}

    req = requests.get(url=url, params=params)
    response = json.loads(req.content)
    return response


import pandas as pd
import googlemaps
from itertools import tee
from datetime import datetime

df = pd.read_excel("Corr1.xlsx")
df
API_key = 'AIzaSyDy_j_im-CrhAwloz2Kv3pEUqjE6-3I4NQ'
gmaps = googlemaps.Client(key=API_key)

time_list = []
distance_list = []
origin_id_list = []
destination_id_list = []

for (i1, row1) in df.iterrows():
  print("origin")
  print(row1['ID'])
  LatOrigin = row1['latitude']
  LongOrigin = row1['longitude']
  origin = (LatOrigin, LongOrigin)
  origin_id = row1['ID'] 
  for (i2, row2) in  df.iterrows():
    print("destination id")
    print(row2['ID'])
    LatDestination = row2['latitude']
    LongDestination = row2['longitude']
    destination_id = row2['ID']
    destination = (LatDestination, LongDestination)
    result = gmaps.distance_matrix(origin, destination, mode = 'driving', avoid="ferries")
    result_distance = result["rows"][0]["elements"][0]["distance"]["value"]
    result_time = result["rows"][0]["elements"][0]["duration"]["value"]
    time_list.append(result_time)
    distance_list.append(result_distance)
    origin_id_list.append(origin_id)
    destination_id_list.append(destination_id)

output = pd.DataFrame(distance_list, columns = ['Distance in meter'])
output['duration in seconds'] = time_list
output['origin_id'] = origin_id_list
output['destination_id'] = destination_id_list

output

output_v1 = pd.merge(output, df, how = "left", left_on = "origin_id", right_on = "ID")

output_v2 = pd.merge(output_v1, df, how = "left", left_on = "destination_id", right_on = "ID")

output_v2

output_v2[['city_x', 'city_y', 'Distance in meter', 'duration in seconds']]

output_v2.to_csv('Coordinates_distancematrix_Correze.csv')



/////Work well/////


import pandas as pd
import googlemaps
from itertools import tee
from datetime import datetime


df = pd.read_excel("Corr1.xlsx")
df

API_key = 'AIzaSyDy_j_im-CrhAwloz2Kv3pEUqjE6-3I4NQ'
gmaps = googlemaps.Client(key=API_key)

time_list = []
distance_list = []
origin_id_list = []
destination_id_list = []


LatOrigin = df.iloc[0, df.columns.get_loc('latitude')]
LongOrigin = df.iloc[0, df.columns.get_loc('longitude')]
origin = (LatOrigin, LongOrigin)
origin_id = df.iloc[0, df.columns.get_loc('ID')]
for (i2, row2) in  df.iterrows():
  print("destination id")
  print(row2['ID'])
  LatDestination = row2['latitude']
  LongDestination = row2['longitude']
  destination_id = row2['ID']
  destination = (LatDestination, LongDestination)
  result = gmaps.distance_matrix(origin, destination, mode = 'driving', avoid="ferries")
  result_distance = result["rows"][0]["elements"][0]["distance"]["value"]
  result_time = result["rows"][0]["elements"][0]["duration"]["value"]
  time_list.append(result_time)
  distance_list.append(result_distance)
  origin_id_list.append(origin_id)
  destination_id_list.append(destination_id)

output = pd.DataFrame(distance_list, columns = ['Distance in meter'])
output['duration in seconds'] = time_list
output['origin_id'] = origin_id_list
output['destination_id'] = destination_id_list

output

output_v1 = pd.merge(output, df, how = "left", left_on = "origin_id", right_on = "ID")

output_v2 = pd.merge(output_v1, df, how = "left", left_on = "destination_id", right_on = "ID")

output_v2

output_v2[['city_x', 'city_y', 'Distance in meter', 'duration in seconds']]

output_v2.to_excel('TEMPS.xlsx')




/////Généralisation du code/////


import pandas as pd
import googlemaps
from itertools import tee
from datetime import datetime

data_files = ['Test/irisWC_C2.xlsx', 'Test/irisWC_C3.xlsx']


for filename in data_files:
    df = pd.read_excel(filename)
    df
    print(filename)
    API_key = 'AIzaSyDy_j_im-CrhAwloz2Kv3pEUqjE6-3I4NQ'
    gmaps = googlemaps.Client(key=API_key)
    time_list = []
    distance_list = []
    origin_id_list = []
    destination_id_list = []
    LatOrigin = df.iloc[0, df.columns.get_loc('latitude')]
    LongOrigin = df.iloc[0, df.columns.get_loc('longitude')]
    origin = (LatOrigin, LongOrigin)
    origin_id = df.iloc[0, df.columns.get_loc('ID')]
    for (i2, row2) in  df.iterrows():
      print("destination id")
      print(row2['ID'])
      LatDestination = row2['latitude']
      LongDestination = row2['longitude']
      destination_id = row2['ID']
      destination = (LatDestination, LongDestination)
      result = gmaps.distance_matrix(origin, destination, mode = 'driving', avoid="ferries")
      result_distance = result["rows"][0]["elements"][0]["distance"]["value"]
      result_time = result["rows"][0]["elements"][0]["duration"]["value"]
      time_list.append(result_time)
      distance_list.append(result_distance)
      origin_id_list.append(origin_id)
      destination_id_list.append(destination_id)
    output = pd.DataFrame(distance_list, columns = ['Distance in meter'])
    output['duration in seconds'] = time_list
    output['origin_id'] = origin_id_list
    output['destination_id'] = destination_id_list
    output
    output_v1 = pd.merge(output, df, how = "left", left_on = "origin_id", right_on = "ID")
    output_v2 = pd.merge(output_v1, df, how = "left", left_on = "destination_id", right_on = "ID")
    output_v2
    output_v2[['city_x', 'city_y', 'Distance in meter', 'duration in seconds']]
    output_v2.to_excel(filename)






import pandas as pd
import googlemaps
from itertools import tee
from datetime import datetime


df = pd.read_excel("Test\irisWC_C1.xlsx")
df

API_key = 'AIzaSyDy_j_im-CrhAwloz2Kv3pEUqjE6-3I4NQ'
gmaps = googlemaps.Client(key=API_key)

time_list = []
distance_list = []
origin_id_list = []
destination_id_list = []

now = datetime.now()

LatOrigin = df.iloc[0, df.columns.get_loc('latitude')]
LongOrigin = df.iloc[0, df.columns.get_loc('longitude')]
origin = (LatOrigin, LongOrigin)
origin_id = df.iloc[0, df.columns.get_loc('ID')]
for (i2, row2) in  df.iterrows():
  print("destination id")
  print(row2['ID'])
  LatDestination = row2['latitude']
  LongDestination = row2['longitude']
  destination_id = row2['ID']
  destination = (LatDestination, LongDestination)
  result = gmaps.distance_matrix(origin, destination, mode = 'driving', avoid="ferries", departure_time=now)
  result_distance = result["rows"][0]["elements"][0]["distance"]["value"]
  result_time = result["rows"][0]["elements"][0]["duration"]["value"]
  time_list.append(result_time)
  distance_list.append(result_distance)
  origin_id_list.append(origin_id)
  destination_id_list.append(destination_id)

output = pd.DataFrame(distance_list, columns = ['Distance in meter'])
output['duration in seconds'] = time_list
output['origin_id'] = origin_id_list
output['destination_id'] = destination_id_list

output

output_v1 = pd.merge(output, df, how = "left", left_on = "origin_id", right_on = "ID")

output_v2 = pd.merge(output_v1, df, how = "left", left_on = "destination_id", right_on = "ID")

output_v2

output_v2[['city_x', 'city_y', 'Distance in meter', 'duration in seconds']]

output_v2.to_excel('C1.xlsx')




import pandas as pd
import googlemaps
from itertools import tee
from datetime import datetime


df = pd.read_excel("Test\irisWC_C2.xlsx")
df

API_key = 'AIzaSyDy_j_im-CrhAwloz2Kv3pEUqjE6-3I4NQ'
gmaps = googlemaps.Client(key=API_key)

time_list = []
distance_list = []
origin_id_list = []
destination_id_list = []

now = datetime.now()

LatOrigin = df.iloc[0, df.columns.get_loc('latitude')]
LongOrigin = df.iloc[0, df.columns.get_loc('longitude')]
origin = (LatOrigin, LongOrigin)
origin_id = df.iloc[0, df.columns.get_loc('ID')]
for (i2, row2) in  df.iterrows():
  print("destination id")
  print(row2['ID'])
  LatDestination = row2['latitude']
  LongDestination = row2['longitude']
  destination_id = row2['ID']
  destination = (LatDestination, LongDestination)
  result = gmaps.distance_matrix(origin, destination, mode = 'driving', avoid="ferries", departure_time=now)
  result_distance = result["rows"][0]["elements"][0]["distance"]["value"]
  result_time = result["rows"][0]["elements"][0]["duration"]["value"]
  time_list.append(result_time)
  distance_list.append(result_distance)
  origin_id_list.append(origin_id)
  destination_id_list.append(destination_id)

output = pd.DataFrame(distance_list, columns = ['Distance in meter'])
output['duration in seconds'] = time_list
output['origin_id'] = origin_id_list
output['destination_id'] = destination_id_list

output

output_v1 = pd.merge(output, df, how = "left", left_on = "origin_id", right_on = "ID")

output_v2 = pd.merge(output_v1, df, how = "left", left_on = "destination_id", right_on = "ID")

output_v2

output_v2[['city_x', 'city_y', 'Distance in meter', 'duration in seconds']]

output_v2.to_excel('C2.xlsx')



