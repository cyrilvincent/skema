import requests
import pandas as pd
import time

# Read the input Excel file
df = pd.read_excel("irisWC_C.xlsx")

# Define the OSRM endpoint URL
endpoint_url = "http://router.project-osrm.org/route/v1/driving/{},{};{},{}"

# Initialize lists to store the results
origin_ids = []
destination_ids = []
origin_cities = []
destination_cities = []
latitudes = []
longitudes = []
distances = []
durations = []

# Create a dictionary to store the computed distances for each pair of IDs
computed_distances = {}
delay = 0.1

# Loop through each row in the input file
for index, row in df.iterrows():
    # Extract the coordinates and cities
    origin_lat, origin_lon, origin_city = row["latitude"], row["longitude"], row["city"]
    origin_id = row["ID"]
    for index2, row2 in df.iterrows():
        destination_lat, destination_lon, destination_city = row2["latitude"], row2["longitude"], row2["city"]
        destination_id = row2["ID"]
        if origin_id == destination_id or (origin_id, destination_id) in computed_distances:
            continue
        while True:
            try:
                response = requests.get(endpoint_url.format(origin_lon, origin_lat, destination_lon, destination_lat), data=json.dumps(data))
                response.raise_for_status()
                break
            except requests.exceptions.RequestException:
                print(f"Connection error for pair ({origin_id}, {destination_id}). Retrying...")
                time.sleep(delay)	
        data = response.json()
        distance = data["routes"][0]["distance"]
        duration = data["routes"][0]["duration"]
        computed_distances[(origin_id, destination_id)] = distance
        computed_distances[(destination_id, origin_id)] = distance
        origin_ids.append(origin_id)
        destination_ids.append(destination_id)
        origin_cities.append(origin_city)
        destination_cities.append(destination_city)
        latitudes.append(origin_lat)
        longitudes.append(origin_lon)
        distances.append(distance)
        durations.append(duration)


output_df = pd.DataFrame({
    "origin_id": origin_ids,
    "destination_id": destination_ids,
    "origin_city": origin_cities,
    "destination_city": destination_cities,
    "latitude": latitudes,
    "longitude": longitudes,
    "distance": distances,
    "duration": durations
})


output_df.to_csv("output_file_2.csv", index=False)

